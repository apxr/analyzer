% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plottrWrapper}
\alias{plottrWrapper}
\title{Creates plots for all the variables in a data.frame}
\usage{
plottrWrapper(
  tb,
  yvar = NULL,
  xclasses = NULL,
  yclass = NULL,
  printall = F,
  binwidth.x = NULL,
  binwidth.y = NULL,
  callasfactor = 1,
  inc.density = F
)
}
\arguments{
\item{tb}{a data.frame}

\item{yvar}{a string showing the repsonse (dependent) variable name. Can be
\code{NULL} if reponse variable is not present}

\item{xclasses}{a vector of length \code{= ncol(tb)} with the data type of
all the columns. Can be \code{NULL}, in such case function assigns a class
to each column. Look into [plottr()] for more details.}

\item{yclass}{class of response variable. Can be \code{NULL}, but must have
value when \code{yvar} is not \code{NULL}. Value can be \code{'factor'} or
\code{'numeric'}}

\item{printall}{(logical) Whether user wants to show the plots. Setting this
as \code{FALSE} will only returns a list of plots silently.}

\item{binwidth.x, binwidth.y}{binwidth for \code{x} and \code{y} used for
generating the histogram. If there are \code{NULL}, then ggplot2 assigns
the value on its own. Look at \code{binwidth} of ggplot for more
information}

\item{callasfactor}{minimum unique values needed for \code{x} to be
considered as numeric. See details of [plottr()] for more information.}

\item{inc.density}{(logical) Whether density plot is needed along with
histogram.}
}
\value{
A list of plots for all the variables. Each plot will have the class
  \code{analyzerPlot} and can be displayed using \code{plot()}. If
  \code{printall = TRUE}, then all plots will also be displayed.
}
\description{
\code{plottrWrapper} is a wrapper built on \code{plottr} to create plots for
all the variables
}
\details{
This function calls [plottr()] multiple times to create the plots for all the
variables. For more information on plots, look into \code{plottr}
}
\examples{
# simple use
p <- plottrWrapper(mtcars)
# To display one of the plot for variable 'mpg'
plot(p$mpg)

# In case displaying all the plots is needed
p <- plottrWrapper(mtcars, printall = TRUE)

# With assuming 'mpg' as a dependent variable
p <- plottrWrapper(mtcars, yvar = "mpg", yclass = "numeric")
plot(p$disp)

}
